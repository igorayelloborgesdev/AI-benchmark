Como criar uma API na FastAPI que leia um arquivo em Excel,
leia os dados da coluna A da linha 521 até a linha 529 e salve na tabela 
CREATE TABLE dbo.SegmentoClassificacao (
    ID INT IDENTITY(1,1) PRIMARY KEY,  -- Chave primária autoincrementada
    Sigla VARCHAR(10) NOT NULL,        -- Sigla extraída dos parênteses
    Descritivo VARCHAR(255) NOT NULL   -- Texto após os parênteses
);
sendo que o registro na planilha está da seguinte forma (DR1) BDR Nível 1,
o que está dentro do parenteses DR1 deve ser salvo na coluna Sigla do banco o que está depois do parenteses ) deve ser salvo na coluna descritivo

--------------------------------------------------------------------------------------------------------------------------------------------------------------

Como criar um método  que leia um arquivo em Excel,
leia os dados da coluna B da linha 9 até a linha 509 e salve na tabela 
CREATE TABLE dbo.[SetorEconomico] (
    ID INT IDENTITY(1,1) PRIMARY KEY,  -- Chave primária autoincrementada
    Descritivo VARCHAR(255) NOT NULL   -- Nome do setor econômico
);

sendo que deve-se desconsiderar as células que estejam com o valor SUBSETOR ou valores em branco

--------------------------------------------------------------------------------------------------------------------------------------------------------------

Como criar um método que leia um arquivo em Excel, na coluna C das linhas 8 até 520 sendo que precisa desconsiderar a célula com o valor 'SEGMENTO' e o conteúdo da coluna D tem que estar vazia
CREATE TABLE dbo.Segmento (
    ID INT IDENTITY(1,1) PRIMARY KEY,  -- Chave primária autoincrementada
    Descritivo VARCHAR(255) NOT NULL   -- Nome do segmento
);

--------------------------------------------------------------------------------------------------------------------------------------------------------------

Preciso inserir dados na tabela abaixo sendo que os dados vem de uma planilha em Excel e na coluna nome o conteúdo está na coluna C da planilha da linha 8 até a 520 desconsiderando as celulas com o valor SEGMENTO
e precisa ter algum conteúdo na coluna D, a coluna D da planilha tem o conteudo que será salvo na coluna Codigo.
Sobre a SegmentoClassificacaoID o conteudo está na coluna E da planilha porém o valor pode estar vazio, quando não for vazio ela terá a sigla que corresponde a coluna Sigla na tabela dbo.SegmentoClassificacao e a partir
dessa sigla deverá trazer o id correspondente
Sobre a SetorEconomicoID o conteudo está na coluna A e ele deve ser a primeira célula acima da linha que contenha um valor não nulo e diferente da palavra 'SETOR ECONÔMICO' ela terá o Descritivo que corresponde a coluna Descritivo 
na tabela dbo.[SetorEconomico] e a partir desse Descritivo deverá trazer o id correspondente
Sobre a SubsetorID o conteudo está na coluna B e ele deve ser a primeira célula acima da linha que contenha um valor não nulo e diferente da palavra 'SUBSETOR' ela terá o Descritivo que corresponde a coluna Descritivo 
na tabela dbo.Subsetor e a partir desse Descritivo deverá trazer o id correspondente
Sobre a SegmentoID o conteudo está na coluna C e ele deve ser a primeira célula acima da linha que contenha um valor não nulo e diferente da palavra 'SEGMENTO' e que tenha um valor nulo na coluna D 
ela terá o Descritivo que corresponde a coluna Descritivo na tabela dbo.Segmento e a partir desse Descritivo deverá trazer o id correspondente


CREATE TABLE dbo.Empresa (
    ID INT IDENTITY(1,1) PRIMARY KEY,  -- Chave primária autoincrementada
    Nome VARCHAR(255) NOT NULL,         -- Nome da empresa
    Codigo VARCHAR(50) NOT NULL,        -- Código/Sigla da empresa
    
    -- Chaves estrangeiras
    SegmentoClassificacaoID INT NULL,   -- FK opcional (NÃO obrigatória)
    SetorEconomicoID INT NOT NULL,      -- FK obrigatória
    SubsetorID INT NOT NULL,            -- FK obrigatória
    SegmentoID INT NOT NULL,            -- FK obrigatória

    -- Definição das chaves estrangeiras
    CONSTRAINT FK_Empresa_SegmentoClassificacao FOREIGN KEY (SegmentoClassificacaoID) 
        REFERENCES dbo.SegmentoClassificacao(ID),
    
    CONSTRAINT FK_Empresa_SetorEconomico FOREIGN KEY (SetorEconomicoID) 
        REFERENCES dbo.SetorEconomico(ID),
    
    CONSTRAINT FK_Empresa_Subsetor FOREIGN KEY (SubsetorID) 
        REFERENCES dbo.Subsetor(ID),
    
    CONSTRAINT FK_Empresa_Segmento FOREIGN KEY (SegmentoID) 
        REFERENCES dbo.Segmento(ID)
);

--------------------------------------------------------------------------------------------------------------------------------------------------------------

Como criar uma API em FatsAPI para retornar todos os resultados da tabela
CREATE TABLE dbo.SegmentoClassificacao (
    ID INT IDENTITY(1,1) PRIMARY KEY,  -- Chave primária autoincrementada
    Sigla VARCHAR(10) NOT NULL,        -- Sigla extraída dos parênteses
    Descritivo VARCHAR(255) NOT NULL   -- Texto após os parênteses
);
usando clean archtecture?

--------------------------------------------------------------------------------------------------------------------------------------------------------------

Preciso criar uma API que retorne os dados da tabela dbo.Empresa sendo que ela precisa retornar os dados das tabelas que tenham chaves estrangeiras

CREATE TABLE dbo.SegmentoClassificacao (
    ID INT IDENTITY(1,1) PRIMARY KEY,  -- Chave primária autoincrementada
    Sigla VARCHAR(10) NOT NULL,        -- Sigla extraída dos parênteses
    Descritivo VARCHAR(255) NOT NULL   -- Texto após os parênteses
);

CREATE TABLE dbo.[SetorEconomico] (
    ID INT IDENTITY(1,1) PRIMARY KEY,  -- Chave primária autoincrementada
    Descritivo VARCHAR(255) NOT NULL   -- Nome do setor econômico
);

CREATE TABLE dbo.Subsetor (
    ID INT IDENTITY(1,1) PRIMARY KEY,  -- Chave primária autoincrementada
    Descritivo VARCHAR(255) NOT NULL   -- Nome do subsetor
);

CREATE TABLE dbo.Segmento (
    ID INT IDENTITY(1,1) PRIMARY KEY,  -- Chave primária autoincrementada
    Descritivo VARCHAR(255) NOT NULL   -- Nome do segmento
);

CREATE TABLE dbo.Empresa (
    ID INT IDENTITY(1,1) PRIMARY KEY,  -- Chave primária autoincrementada
    Nome VARCHAR(255) NOT NULL,         -- Nome da empresa
    Codigo VARCHAR(50) NOT NULL,        -- Código/Sigla da empresa
    
    -- Chaves estrangeiras
    SegmentoClassificacaoID INT NULL,   -- FK opcional (NÃO obrigatória)
    SetorEconomicoID INT NOT NULL,      -- FK obrigatória
    SubsetorID INT NOT NULL,            -- FK obrigatória
    SegmentoID INT NOT NULL,            -- FK obrigatória

    -- Definição das chaves estrangeiras
    CONSTRAINT FK_Empresa_SegmentoClassificacao FOREIGN KEY (SegmentoClassificacaoID) 
        REFERENCES dbo.SegmentoClassificacao(ID),
    
    CONSTRAINT FK_Empresa_SetorEconomico FOREIGN KEY (SetorEconomicoID) 
        REFERENCES dbo.SetorEconomico(ID),
    
    CONSTRAINT FK_Empresa_Subsetor FOREIGN KEY (SubsetorID) 
        REFERENCES dbo.Subsetor(ID),
    
    CONSTRAINT FK_Empresa_Segmento FOREIGN KEY (SegmentoID) 
        REFERENCES dbo.Segmento(ID)
);

seguindo o padrão: 

def get_all_segmento(self) -> List[Tuple[int, str]]:
        conn = get_db_connection()
        cursor = conn.cursor()
        query = "SELECT ID, Descritivo FROM dbo.Segmento"
        cursor.execute(query)
        result = cursor.fetchall()
        conn.close()
        return [(row.ID, row.Descritivo) for row in result]

--------------------------------------------------------------------------------------------------------------------------------------------------------------

Como consumir dados do seguinte endereço por meio de um adapter (design pattern) em clean archtecute usando FastAPI e salvando os dados consumidos na tabela CREATE TABLE CDI_Diario (
    Data DATE NOT NULL,
    Valor FLOAT NOT NULL,
    PRIMARY KEY (Data)
);

--------------------------------------------------------------------------------------------------------------------------------------------------------------

Como fazer uma API que consulte os dados na tabela usando filtro de data inicial e final
CREATE TABLE CDI_Diario (
    Data DATE NOT NULL,
    Valor FLOAT NOT NULL,
    PRIMARY KEY (Data)
);

--------------------------------------------------------------------------------------------------------------------------------------------------------------

Como criar uma API para consultar os dados do IBovespa usando YFinance, por meio de um adapter (design pattern), em FastAPI e depois da consulta salvar os dados em uma tabela no banco de dados

--------------------------------------------------------------------------------------------------------------------------------------------------------------

Como fazer uma API que consulte os dados na tabela usando filtro de data inicial e final
CREATE TABLE IBOV_Historico (
    Data DATE NOT NULL PRIMARY KEY,
    Abertura FLOAT NOT NULL,
    Alta FLOAT NOT NULL,
    Baixa FLOAT NOT NULL,
    Fechamento FLOAT NOT NULL,
    Volume BIGINT NOT NULL
);

--------------------------------------------------------------------------------------------------------------------------------------------------------------

Como criar uma API para consultar os dados de ações listadas na Bovespa usando YFinance, por meio de um adapter (design pattern), em FastAPI e depois da consulta salvar os dados em uma tabela no banco de dados

--------------------------------------------------------------------------------------------------------------------------------------------------------------

Preciso criar uma FastAPI usando clean archtecture que retorne o índice Beta sendo que tenho duas tabelas uma com índice Bovespa e outra com o histórico das ações sendo as tabelas
CREATE TABLE IBOV_Historico (
    Data DATE NOT NULL PRIMARY KEY,
    Abertura FLOAT NOT NULL,
    Alta FLOAT NOT NULL,
    Baixa FLOAT NOT NULL,
    Fechamento FLOAT NOT NULL,
    Volume BIGINT NOT NULL
);

CREATE TABLE Acao_Historico (
    Data DATE NOT NULL,
    Codigo VARCHAR(10) NOT NULL,
    Abertura FLOAT NOT NULL,
    Alta FLOAT NOT NULL,
    Baixa FLOAT NOT NULL,
    Fechamento FLOAT NOT NULL,
    Volume BIGINT NOT NULL,
    PRIMARY KEY (Data, Codigo) -- Permite várias ações diferentes na mesma data
);